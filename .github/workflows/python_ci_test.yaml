name: Python Test and Lint

on: [push, pull_request]
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8"]
    steps:
    - name: Checkout git repository
      uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        architecture: x64
    - name: Install Pango
      run: sudo apt-get install libsdl-pango-dev
#    - name: install pip dependencies
#      uses: BSFishy/pip-action@v1
#      with:
#        packages: poetry pylint
    - name: Install poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true
    - name: Load cached poetry venv
      id: cached-poetry-dependencies
      uses: actions/cache@v2
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
    - name: Install dependencies using poetry
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root
    - name: Set PythonPath
      run: | 
        echo "PYTHONPATH=./src/" >> $GITHUB_ENV
#        echo "./src/" >> $GITHUB_PATH
    - name: Lint with pylint
      run: |
        source .venv/bin/activate
        pylint $(git ls-files '*.py' -x 'test_*.py')
    - name: Test with pytest
      run: |
        source .venv/bin/activate
        pytest tests/
